#!/bin/bash\n\n# Script para gestionar el stack completo de desarrollo\n# PostgreSQL + Redis + Superset\n\nset -e\n\n# Colores para output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\nprint_message() {\n    echo -e \"${GREEN}[INFO]${NC} $1\"\n}\n\nprint_warning() {\n    echo -e \"${YELLOW}[WARNING]${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"${RED}[ERROR]${NC} $1\"\n}\n\nprint_header() {\n    echo -e \"${BLUE}=====================================\\n$1\\n=====================================${NC}\"\n}\n\n# Verificar dependencias\ncheck_dependencies() {\n    if ! command -v docker &> /dev/null; then\n        print_error \"Docker no est√° instalado\"\n        exit 1\n    fi\n    \n    if ! command -v docker compose &> /dev/null; then\n        print_error \"Docker Compose no est√° disponible\"\n        exit 1\n    fi\n    \n    print_message \"Docker y Docker Compose disponibles\"\n}\n\n# Configurar archivo .env si no existe\nsetup_env() {\n    if [ ! -f .env ]; then\n        print_message \"Creando archivo .env desde template...\"\n        cp .env.dev .env\n        \n        # Generar SECRET_KEY √∫nica usando m√©todo m√°s seguro\n        if command -v openssl &> /dev/null; then\n            SECRET_KEY=$(openssl rand -base64 42 | tr -d '/')\n            # Usar printf y >> para evitar problemas con sed\n            print_message \"Generando SECRET_KEY segura...\"\n            \n            # Crear archivo temporal\n            awk -v key=\"$SECRET_KEY\" '{\n                if ($0 ~ /SUPERSET_SECRET_KEY=your-very-strong-secret-key-change-this-in-production/) {\n                    print \"SUPERSET_SECRET_KEY=\" key\n                } else {\n                    print $0\n                }\n            }' .env > .env.tmp && mv .env.tmp .env\n            \n            print_message \"SECRET_KEY generada autom√°ticamente\"\n        else\n            print_warning \"OpenSSL no disponible. Por favor cambia SUPERSET_SECRET_KEY en .env\"\n        fi\n    else\n        print_message \"Archivo .env ya existe\"\n    fi\n}\n\n# Iniciar stack completo\nstart_stack() {\n    print_header \"üöÄ INICIANDO STACK COMPLETO DE DESARROLLO\"\n    \n    print_message \"Iniciando PostgreSQL...\"\n    docker compose -f docker-compose.dev.yml up -d postgres\n    \n    print_message \"Esperando que PostgreSQL est√© listo...\"\n    sleep 10\n    \n    print_message \"Iniciando Redis...\"\n    docker compose -f docker-compose.dev.yml up -d redis\n    \n    print_message \"Esperando que Redis est√© listo...\"\n    sleep 5\n    \n    print_message \"Inicializando base de datos de Superset...\"\n    docker compose -f docker-compose.dev.yml up superset-init\n    \n    print_message \"Iniciando servicios de Superset...\"\n    docker compose -f docker-compose.dev.yml up -d superset superset-worker superset-worker-beat\n    \n    print_header \"üéâ ¬°STACK COMPLETO INICIADO!\"\n    echo \"\"\n    print_message \"üìä Superset disponible en: http://localhost:8088\"\n    print_message \"üë§ Usuario: admin\"\n    print_message \"üîë Contrase√±a: admin\"\n    print_message \"üîç PostgreSQL: localhost:5432 (postgres/a8Nci+MpaOcFYzSa)\"\n    print_message \"üî¥ Redis: localhost:6379 (password: CQhgg6uELsQQwUXA)\"\n    echo \"\"\n    print_message \"üìã Ver estado: ./dev-stack.sh status\"\n    print_message \"üìú Ver logs: ./dev-stack.sh logs\"\n}\n\n# Detener stack\nstop_stack() {\n    print_message \"Deteniendo stack completo...\"\n    docker compose -f docker-compose.dev.yml down\n    print_message \"‚úÖ Stack detenido\"\n}\n\n# Reiniciar stack\nrestart_stack() {\n    print_message \"Reiniciando stack...\"\n    stop_stack\n    sleep 2\n    start_stack\n}\n\n# Ver estado\nshow_status() {\n    print_header \"üìä ESTADO DEL STACK\"\n    docker compose -f docker-compose.dev.yml ps\n    \n    echo \"\"\n    print_header \"üîç HEALTH CHECKS\"\n    \n    # Check PostgreSQL\n    if docker exec postgres_prod pg_isready -U postgres &>/dev/null; then\n        print_message \"‚úÖ PostgreSQL: Saludable\"\n    else\n        print_error \"‚ùå PostgreSQL: No responde\"\n    fi\n    \n    # Check Redis\n    if docker exec redis_prod redis-cli -a CQhgg6uELsQQwUXA ping &>/dev/null | grep -q PONG; then\n        print_message \"‚úÖ Redis: Saludable\"\n    else\n        print_error \"‚ùå Redis: No responde\"\n    fi\n    \n    # Check Superset\n    if curl -s http://localhost:8088/health &>/dev/null; then\n        print_message \"‚úÖ Superset: Saludable\"\n    else\n        print_warning \"‚ö†Ô∏è  Superset: No responde (puede estar iniciando)\"\n    fi\n}\n\n# Ver logs\nshow_logs() {\n    if [ -n \"${2:-}\" ]; then\n        print_message \"Mostrando logs de $2...\"\n        docker compose -f docker-compose.dev.yml logs -f \"$2\"\n    else\n        print_message \"Mostrando logs de todos los servicios...\"\n        docker compose -f docker-compose.dev.yml logs -f\n    fi\n}\n\n# Limpiar todo\ncleanup() {\n    print_warning \"Esto eliminar√° todos los contenedores, vol√∫menes y datos.\"\n    read -p \"¬øEst√°s seguro? (y/N): \" -n 1 -r\n    echo\n    if [[ $REPLY =~ ^[Yy]$ ]]; then\n        print_message \"Limpiando stack completo...\"\n        docker compose -f docker-compose.dev.yml down -v --remove-orphans\n        docker system prune -f\n        print_message \"‚úÖ Limpieza completada\"\n    else\n        print_message \"Operaci√≥n cancelada\"\n    fi\n}\n\n# Actualizar im√°genes\nupdate_images() {\n    print_message \"Actualizando im√°genes...\"\n    docker compose -f docker-compose.dev.yml pull\n    docker compose -f docker-compose.dev.yml up -d\n    print_message \"‚úÖ Im√°genes actualizadas\"\n}\n\n# Crear backup de PostgreSQL\nbackup_postgres() {\n    local backup_file=\"backup_postgres_$(date +%Y%m%d_%H%M%S).sql\"\n    print_message \"Creando backup de PostgreSQL...\"\n    \n    docker exec postgres_prod pg_dumpall -U postgres > \"$backup_file\"\n    print_message \"‚úÖ Backup creado: $backup_file\"\n}\n\n# Conectar a PostgreSQL\nconnect_postgres() {\n    print_message \"Conectando a PostgreSQL...\"\n    docker exec -it postgres_prod psql -U postgres\n}\n\n# Conectar a Redis\nconnect_redis() {\n    print_message \"Conectando a Redis...\"\n    docker exec -it redis_prod redis-cli -a CQhgg6uELsQQwUXA\n}\n\n# Men√∫ principal\nprint_header \"üõ†Ô∏è  BI AUTOMATION - DEV STACK MANAGER\"\n\ncase \"${1:-help}\" in\n    \"start\")\n        check_dependencies\n        setup_env\n        start_stack\n        ;;\n    \"stop\")\n        stop_stack\n        ;;\n    \"restart\")\n        check_dependencies\n        restart_stack\n        ;;\n    \"status\")\n        show_status\n        ;;\n    \"logs\")\n        show_logs \"$@\"\n        ;;\n    \"cleanup\")\n        cleanup\n        ;;\n    \"update\")\n        update_images\n        ;;\n    \"backup\")\n        backup_postgres\n        ;;\n    \"psql\")\n        connect_postgres\n        ;;\n    \"redis\")\n        connect_redis\n        ;;\n    \"help\"|*)\n        echo \"Uso: $0 {comando}\"\n        echo \"\"\n        echo \"Comandos disponibles:\"\n        echo \"  start      - Iniciar stack completo (PostgreSQL + Redis + Superset)\"\n        echo \"  stop       - Detener todos los servicios\"\n        echo \"  restart    - Reiniciar stack completo\"\n        echo \"  status     - Mostrar estado y health checks\"\n        echo \"  logs       - Mostrar logs (opcional: especificar servicio)\"\n        echo \"  update     - Actualizar im√°genes Docker\"\n        echo \"  backup     - Crear backup completo de PostgreSQL\"\n        echo \"  cleanup    - Limpiar contenedores y vol√∫menes (¬°CUIDADO!)\"\n        echo \"  psql       - Conectar a PostgreSQL interactivamente\"\n        echo \"  redis      - Conectar a Redis interactivamente\"\n        echo \"  help       - Mostrar esta ayuda\"\n        echo \"\"\n        echo \"Ejemplos:\"\n        echo \"  $0 start                    # Iniciar todo\"\n        echo \"  $0 logs superset           # Ver logs solo de Superset\"\n        echo \"  $0 logs postgres           # Ver logs solo de PostgreSQL\"\n        echo \"\"\n        echo \"üìö Documentaci√≥n completa en: README.md\"\n        ;;\nesac